"use client";
import React, { useState } from "react";

import {
    Modal,
    ModalContent,
    ModalHeader,
    ModalBody,
    ModalFooter,
    Button,
    useDisclosure,
    Input,
    Textarea,
} from "@heroui/react";
import { Flex, VStack, HStack } from "@chakra-ui/react";

import DynamicIcon from "@/app/components/DynamicIcon";

export default function CreateProjectModal({ lang }) {
    const { isOpen, onOpen, onOpenChange } = useDisclosure();

    // Estados del formulario
    const [title, setTitle] = useState("");
    const [subtitle, setSubtitle] = useState("");
    const [content, setContent] = useState("");
    const [websiteURL, setWebsiteURL] = useState("");
    const [githubURL, setGithubURL] = useState("");
    const [technologies, setTechnologies] = useState([]);
    const [techInput, setTechInput] = useState("");
    const [techIcon, setTechIcon] = useState("");

    // Estado para el idioma ('en' o 'es')
    const [language, setLanguage] = useState(lang);

    // Agregar tecnología a la lista
    const addTechnology = () => {
        if (techInput.trim() !== "" && techIcon.trim() !== "") {
            setTechnologies([...technologies, {
                name: techInput, icon: techIcon
            }]);
            setTechInput("");
            setTechIcon("");
        }
    };

    // Manejador de envío del formulario (solo demo)
    const handleSubmit = (e) => {
        e.preventDefault();
        const data = {
            title,
            subtitle,
            content,
            technology: technologies, // array de {name, icon}
            url: { website: websiteURL, github: githubURL },
        };
        console.log("Datos del formulario:", data);
        onOpenChange(false);
    };

    return (
        <>
            {/* Botón grande centrado con ícono de plus */}
            <Flex justify="center" align="center" style={{ margin: "2rem 0" }}>
                <Button
                    onPress={onOpen}
                    size="xl"
                    style={{
                        width: "100px",
                        height: "100px",
                        borderRadius: "50%",
                    }}
                >
                    <DynamicIcon icon="FiPlus" size="lg" />
                </Button>
            </Flex>

            <Modal isOpen={isOpen} onOpenChange={onOpenChange}>
                <ModalContent style={{ maxWidth: "600px", width: "90%", margin: "auto" }}>
                    {(onClose) => (
                        <form onSubmit={handleSubmit}>
                            <ModalHeader>
                                <h2>{language === "en" ? "Create New Project" : "Crear Nuevo Proyecto"}</h2>
                            </ModalHeader>
                            <ModalBody>
                                <VStack spacing={3}>
                                    {/* Título del Proyecto */}
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "Project Title"
                                                : "Título del Proyecto"}
                                        </label>
                                        <Input
                                            fullWidth={true}
                                            value={title}
                                            onChange={(e) => setTitle(e.target.value)}
                                            placeholder={
                                                language === "en"
                                                    ? "Enter project title"
                                                    : "Ingrese el título del proyecto"
                                            }
                                            required
                                        />
                                    </div>

                                    {/* Subtítulo del Proyecto */}
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "Project Subtitle"
                                                : "Subtítulo del Proyecto"}
                                        </label>
                                        <Input
                                            fullWidth={true}
                                            value={subtitle}
                                            onChange={(e) => setSubtitle(e.target.value)}
                                            placeholder={
                                                language === "en"
                                                    ? "Enter project subtitle"
                                                    : "Ingrese el subtítulo del proyecto"
                                            }
                                            required
                                        />
                                    </div>

                                    {/* Tecnologías */}
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "Technologies (search and add)"
                                                : "Tecnologías (buscar y agregar)"}
                                        </label>
                                        <HStack spacing={2}>
                                            <Input
                                                fullWidth={true}
                                                value={techInput}
                                                onChange={(e) => setTechInput(e.target.value)}
                                                placeholder="Technology Name"
                                            />
                                            <Input
                                                fullWidth={true}
                                                value={techIcon}
                                                onChange={(e) => setTechIcon(e.target.value)}
                                                placeholder="Icon name (e.g., FiReact)"
                                            />
                                            <Button onPress={addTechnology}>
                                                {language === "en" ? "Add" : "Agregar"}
                                            </Button>
                                        </HStack>
                                        <HStack spacing={2} wrap="wrap">
                                            {technologies.map((tech, idx) => (
                                                <Flex
                                                    key={idx}
                                                    align="center"
                                                    border="1px solid #ccc"
                                                    p="4px"
                                                    borderRadius="md"
                                                >
                                                    <DynamicIcon icon={tech.icon} size="sm" />
                                                    <span style={{ marginLeft: "4px" }}>{tech.name}</span>
                                                </Flex>
                                            ))}
                                        </HStack>
                                    </div>

                                    {/* Contenido del Proyecto (Markdown) */}
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "Project Content (Markdown)"
                                                : "Contenido del Proyecto (Markdown)"}
                                        </label>
                                        <Textarea
                                            fullWidth={true}
                                            value={content}
                                            onChange={(e) => setContent(e.target.value)}
                                            placeholder={
                                                language === "en"
                                                    ? "Enter markdown content, images allowed"
                                                    : "Ingrese contenido en markdown, se permiten imágenes"
                                            }
                                            required
                                            rows={6}
                                        />
                                    </div>

                                    {/* URLs */}
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "Website URL"
                                                : "URL de la Página"}
                                        </label>
                                        <Input
                                            fullWidth={true}
                                            value={websiteURL}
                                            onChange={(e) => setWebsiteURL(e.target.value)}
                                            placeholder="https://example.com"
                                            required
                                        />
                                    </div>
                                    <div>
                                        <label>
                                            {language === "en"
                                                ? "GitHub URL"
                                                : "URL del Repositorio de GitHub"}
                                        </label>
                                        <Input
                                            fullWidth={true}
                                            value={githubURL}
                                            onChange={(e) => setGithubURL(e.target.value)}
                                            placeholder="https://github.com/username/repo"
                                            required
                                        />
                                    </div>
                                </VStack>
                            </ModalBody>
                            <ModalFooter>
                                <Button type="submit">
                                    {language === "en" ? "Create" : "Crear"}
                                </Button>
                                <Button variant="light" color="danger" onPress={onClose}>
                                    {language === "en" ? "Cancel" : "Cancelar"}
                                </Button>
                            </ModalFooter>
                        </form>
                    )}
                </ModalContent>
            </Modal>
        </>
    );
}
